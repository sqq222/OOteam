# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-20 06:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='请输入用户名', max_length=50, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(help_text='请输入Email', max_length=254, verbose_name='Email')),
                ('fullname', models.CharField(blank=True, max_length=80, null=True, verbose_name='姓名')),
                ('is_active', models.BooleanField(default=False, help_text='指定此账号是否为活动，取消此选项，不会删除用户', verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, help_text='指定此账号是否为后台管理员，取消此选项，该用户不能登录后台管理系统', verbose_name='管理员')),
                ('is_staff', models.BooleanField(default=False, help_text='指定此账号是否可以登录管理员界面', verbose_name='员工状态')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='注册时间')),
                ('sex', models.IntegerField(choices=[(1, '男'), (2, '女'), (0, '未知')], default=0, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('status', models.IntegerField(choices=[(0, '激活'), (1, '锁定')], default=0, verbose_name='状态')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='地理位置')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '账户',
                'verbose_name_plural': '账户',
            },
        ),
        migrations.CreateModel(
            name='CountAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='音频路径')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': '商品 - 数量音频',
                'verbose_name_plural': '商品 - 数量音频',
            },
        ),
        migrations.CreateModel(
            name='Desk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='桌号')),
                ('display_number', models.CharField(max_length=20, verbose_name='显示桌号')),
                ('no_smoking', models.BooleanField(default=False, verbose_name='禁烟')),
            ],
            options={
                'verbose_name': '商品 - 餐桌',
                'verbose_name_plural': '商品 - 餐桌',
            },
        ),
        migrations.CreateModel(
            name='DeskAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='音频路径')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('desk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.Desk', verbose_name='单位')),
            ],
            options={
                'verbose_name': '商品 - 餐桌音频',
                'verbose_name_plural': '商品 - 餐桌音频',
            },
        ),
        migrations.CreateModel(
            name='DeskCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('num', models.IntegerField(verbose_name='最多人数')),
            ],
            options={
                'verbose_name': '商品 - 餐桌类别',
                'verbose_name_plural': '商品 - 餐桌类别',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='商品名称')),
                ('desc', models.CharField(max_length=200, verbose_name='描述')),
                ('is_include_tax', models.BooleanField(default=True, verbose_name='是否含税')),
                ('purchase', models.IntegerField(verbose_name='限定')),
                ('sell_time', models.IntegerField(choices=[(0, '全天'), (1, '限时')], default=0, verbose_name='售时')),
                ('sell_week', models.CharField(blank=True, max_length=100, null=True, verbose_name='售时周')),
                ('image_size', models.IntegerField(default=1, verbose_name='图片大小')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='价格')),
                ('stock', models.IntegerField(blank=True, default=100, null=True, verbose_name='库存')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否上架')),
            ],
            options={
                'verbose_name': '商品 - 商品',
                'verbose_name_plural': '商品 - 商品',
            },
        ),
        migrations.CreateModel(
            name='FoodAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='音频路径')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('food', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.Food', verbose_name='商品')),
            ],
            options={
                'verbose_name': '商品 - 商品音频',
                'verbose_name_plural': '商品 - 商品音频',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='类别名称')),
                ('desc', models.CharField(max_length=100, verbose_name='注释')),
                ('is_display', models.BooleanField(default=True, verbose_name='是否表示')),
            ],
            options={
                'verbose_name': '商品 - 类别',
                'verbose_name_plural': '商品 - 类别',
            },
        ),
        migrations.CreateModel(
            name='FoodCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='数量')),
            ],
            options={
                'verbose_name': '商品 - 商品数量',
                'verbose_name_plural': '商品 - 商品数量',
            },
        ),
        migrations.CreateModel(
            name='FoodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='food/', verbose_name='开始时间')),
            ],
            options={
                'verbose_name': '商品 - 商品图片',
                'verbose_name_plural': '商品 - 商品图片',
            },
        ),
        migrations.CreateModel(
            name='FoodSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('stock', models.IntegerField(blank=True, default=100, null=True, verbose_name='库存')),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Food', verbose_name='商品')),
            ],
            options={
                'verbose_name': '商品 - 商品规格',
                'verbose_name_plural': '商品 - 商品规格',
            },
        ),
        migrations.CreateModel(
            name='FoodUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='单位')),
            ],
            options={
                'verbose_name': '商品 - 商品单位',
                'verbose_name_plural': '商品 - 商品单位',
            },
        ),
        migrations.CreateModel(
            name='Kitchen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='厨房')),
            ],
            options={
                'verbose_name': '商品 - 厨房',
                'verbose_name_plural': '商品 - 厨房',
            },
        ),
        migrations.CreateModel(
            name='SellPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateTimeField(verbose_name='开始时间')),
                ('end', models.DateTimeField(verbose_name='结束时间')),
            ],
            options={
                'verbose_name': '商品 - 售时时间',
                'verbose_name_plural': '商品 - 售时时间',
            },
        ),
        migrations.CreateModel(
            name='Store_Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='store_ad/')),
            ],
            options={
                'verbose_name': '门店 - 广告图片',
                'verbose_name_plural': '门店 - 广告图片',
            },
        ),
        migrations.CreateModel(
            name='Store_Auth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='email地址')),
                ('status', models.IntegerField(choices=[(1, '已认证'), (0, '未认证')], default=0, verbose_name='状态')),
            ],
            options={
                'verbose_name': '门店 - 身份认证',
                'verbose_name_plural': '门店 - 身份认证',
            },
        ),
        migrations.CreateModel(
            name='Store_Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_tel', models.CharField(max_length=20, verbose_name='订餐电话')),
                ('notice', models.CharField(max_length=500, verbose_name='公告')),
                ('desc', models.CharField(max_length=500, verbose_name='简介')),
                ('pwd', models.CharField(blank=True, max_length=10, null=True, verbose_name='菜牌密码')),
            ],
            options={
                'verbose_name': '门店 - 营业设置',
                'verbose_name_plural': '门店 - 营业设置',
            },
        ),
        migrations.CreateModel(
            name='Store_Business_Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_normal', models.TimeField(verbose_name='平日开店时间')),
                ('end_normal', models.TimeField(verbose_name='平日闭店时间')),
                ('start_holiday', models.TimeField(verbose_name='假期开店时间')),
                ('end_holiday', models.TimeField(verbose_name='假期闭店时间')),
                ('last_normal', models.TimeField(verbose_name='平日最后下单时间')),
                ('last_holiday', models.TimeField(verbose_name='假期最后下单时间')),
                ('start_rest_normal', models.TimeField(verbose_name='平日开始休息时间')),
                ('end_rest_normal', models.TimeField(verbose_name='平日结束休息时间')),
                ('start_rest_holiday', models.TimeField(verbose_name='假期开始休息时间')),
                ('end_rest_holiday', models.TimeField(verbose_name='假期结束休息时间')),
                ('monday', models.BooleanField(default=False, verbose_name='周一')),
                ('tuesday', models.BooleanField(default=False, verbose_name='周二')),
                ('wednesday', models.BooleanField(default=False, verbose_name='周三')),
                ('thursday', models.BooleanField(default=False, verbose_name='周四')),
                ('friday', models.BooleanField(default=False, verbose_name='周五')),
                ('saturday', models.BooleanField(default=False, verbose_name='周六')),
                ('sunday', models.BooleanField(default=False, verbose_name='周日')),
            ],
            options={
                'verbose_name': '门店 - 营业时间',
                'verbose_name_plural': '门店 - 营业时间',
            },
        ),
        migrations.CreateModel(
            name='Store_Business_Time_FreeDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_day', models.DateField(verbose_name='定休日')),
                ('store_business_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Store_Business_Time', verbose_name='营业时间属性')),
            ],
            options={
                'verbose_name': '门店 - 定休日',
                'verbose_name_plural': '门店 - 定休日',
            },
        ),
        migrations.CreateModel(
            name='Store_Catering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='餐饮')),
            ],
            options={
                'verbose_name': '门店 - 餐饮',
                'verbose_name_plural': '门店 - 餐饮',
            },
        ),
        migrations.CreateModel(
            name='Store_Food_Safety',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='store_food_safety/')),
                ('status', models.IntegerField(choices=[(1, '未审核'), (2, '审核中'), (3, '已通过'), (0, '审核失败')], default=0, verbose_name='状态')),
            ],
            options={
                'verbose_name': '门店 - 食品安全等级',
                'verbose_name_plural': '门店 - 食品安全等级',
            },
        ),
        migrations.CreateModel(
            name='Store_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='store/')),
            ],
            options={
                'verbose_name': '门店 - 门店图片',
                'verbose_name_plural': '门店 - 门店图片',
            },
        ),
        migrations.CreateModel(
            name='Store_Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='行业')),
            ],
            options={
                'verbose_name': '门店 - 行业',
                'verbose_name_plural': '门店 - 行业',
            },
        ),
        migrations.CreateModel(
            name='Store_Kitchen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='store/')),
            ],
            options={
                'verbose_name': '门店 - 后厨图片',
                'verbose_name_plural': '门店 - 后厨图片',
            },
        ),
        migrations.CreateModel(
            name='Store_License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front', models.ImageField(upload_to='store_license')),
                ('backend', models.ImageField(upload_to='store_license')),
                ('business_name', models.CharField(max_length=100, verbose_name='企业名称')),
                ('business_license', models.CharField(max_length=50, verbose_name='注册号')),
                ('business_address', models.CharField(max_length=200, verbose_name='地址')),
                ('business_enddate', models.DateField(blank=True, null=True, verbose_name='到期日期')),
                ('legal_person', models.CharField(blank=True, max_length=20, null=True, verbose_name='法人')),
                ('status', models.IntegerField(choices=[(1, '未审核'), (2, '审核中'), (3, '已通过'), (0, '审核失败')], default=1)),
            ],
            options={
                'verbose_name': '门店 - 营业执照',
                'verbose_name_plural': '门店 - 营业执照',
            },
        ),
        migrations.CreateModel(
            name='Store_Lobby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='store/')),
            ],
            options={
                'verbose_name': '门店 - 大堂图片',
                'verbose_name_plural': '门店 - 大堂图片',
            },
        ),
        migrations.CreateModel(
            name='Store_Other',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='store/')),
            ],
            options={
                'verbose_name': '门店 - 其他图片',
                'verbose_name_plural': '门店 - 其他图片',
            },
        ),
        migrations.CreateModel(
            name='Store_Rotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rotation', models.ImageField(upload_to='rotation/', verbose_name='轮播图')),
            ],
            options={
                'verbose_name': '门店 - 轮播图',
                'verbose_name_plural': '门店 - 轮播图',
            },
        ),
        migrations.CreateModel(
            name='Stores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='logo/', verbose_name='LOGO')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('address', models.CharField(max_length=100, verbose_name='地址')),
                ('tel', models.CharField(max_length=20, verbose_name='电话')),
                ('send_food', models.BooleanField(default=True, verbose_name='是否送菜')),
                ('open_menu', models.BooleanField(default=True, verbose_name='公开菜牌')),
                ('principal', models.CharField(max_length=50, verbose_name='负责人')),
                ('principal_tel', models.CharField(max_length=30, verbose_name='负责人手机')),
                ('bank_num', models.CharField(blank=True, max_length=50, null=True, verbose_name='银行卡号')),
                ('auth', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Store_Auth', verbose_name='身份认证')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.Store_Business', verbose_name='营业设置')),
                ('business_time', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Store_Business_Time', verbose_name='营业时间')),
                ('catering', models.ManyToManyField(blank=True, to='user.Store_Catering', verbose_name='餐饮')),
                ('food_safety', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Store_Food_Safety', verbose_name='食品安全等级')),
                ('industry', models.ManyToManyField(blank=True, to='user.Store_Industry', verbose_name='行业')),
                ('license', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Store_License', verbose_name='营业执照认证')),
            ],
            options={
                'verbose_name': '门店 - 基础信息',
                'verbose_name_plural': '门店 - 基础信息',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
            ],
            options={
                'verbose_name': '商品 - 标签',
                'verbose_name_plural': '商品 - 标签',
            },
        ),
        migrations.CreateModel(
            name='TagAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='音频路径')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('tag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name': '商品 - 标签音频',
                'verbose_name_plural': '商品 - 标签音频',
            },
        ),
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('desc', models.CharField(max_length=200, verbose_name='注释')),
                ('choice', models.IntegerField(choices=[(0, '单选'), (1, '多选')], default=0, verbose_name='单选/多选')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺')),
            ],
            options={
                'verbose_name': '商品 - 标签类别',
                'verbose_name_plural': '商品 - 标签类别',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='税率')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺')),
            ],
            options={
                'verbose_name': '商品 - 税率',
                'verbose_name_plural': '商品 - 税率',
            },
        ),
        migrations.CreateModel(
            name='UnitAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='音频路径')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.FoodUnit', verbose_name='单位')),
            ],
            options={
                'verbose_name': '商品 - 单位音频',
                'verbose_name_plural': '商品 - 单位音频',
            },
        ),
        migrations.CreateModel(
            name='UploadFileForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('file', models.FileField(upload_to='uploads/')),
            ],
            options={
                'verbose_name': 'Upload',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='用户类型')),
            ],
            options={
                'verbose_name': '用户类型',
            },
        ),
        migrations.AddField(
            model_name='tag',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.TagCategory', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='tag',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='store_rotation',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='store_other',
            name='Store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='store_lobby',
            name='Store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='store_kitchen',
            name='Store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='store_image',
            name='Store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='store_ad',
            name='Store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='sellperiod',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='kitchen',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='foodcategory',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='food',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.FoodCategory', verbose_name='商品类别'),
        ),
        migrations.AddField(
            model_name='food',
            name='images',
            field=models.ManyToManyField(to='user.FoodImage', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='food',
            name='kitchen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Kitchen', verbose_name='厨房'),
        ),
        migrations.AddField(
            model_name='food',
            name='sell_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.SellPeriod', verbose_name='售时时间'),
        ),
        migrations.AddField(
            model_name='food',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='food',
            name='tag',
            field=models.ManyToManyField(to='user.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='food',
            name='tax',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Tax', verbose_name='税率'),
        ),
        migrations.AddField(
            model_name='food',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.FoodUnit', verbose_name='单位'),
        ),
        migrations.AddField(
            model_name='deskcategory',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='desk',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.DeskCategory', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='desk',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Stores', verbose_name='店铺'),
        ),
        migrations.AddField(
            model_name='countaudio',
            name='count',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.FoodCount', verbose_name='数量'),
        ),
        migrations.AddField(
            model_name='abstractuser',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Stores'),
        ),
        migrations.AddField(
            model_name='abstractuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='abstractuser',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.UserType'),
        ),
    ]
